package tcp_emitter 
/*
* File Generated by enaml generator
* !!! Please do not edit this file !!!
*/
type TcpEmitter struct {

	/*LockTtl - Descr: TTL for service lock Default: 10s
*/
	LockTtl interface{} `yaml:"lock_ttl,omitempty"`

	/*SyncInterval - Descr: Interval to sync with BBS to get latest route information. Default: 20s
*/
	SyncInterval interface{} `yaml:"sync_interval,omitempty"`

	/*Bbs - Descr: PEM-encoded client certificate Default: <nil>
*/
	Bbs *TcpEmitterBbs `yaml:"bbs,omitempty"`

	/*LockRetryInterval - Descr: interval to wait before retrying a failed lock acquisition Default: 5s
*/
	LockRetryInterval interface{} `yaml:"lock_retry_interval,omitempty"`

	/*DebugAddress - Descr: Address at which to serve debug info Default: 0.0.0.0:17002
*/
	DebugAddress interface{} `yaml:"debug_address,omitempty"`

	/*LogLevel - Descr: Log level Default: info
*/
	LogLevel interface{} `yaml:"log_level,omitempty"`

	/*OauthSecret - Descr: Password for UAA client for tcp emitter. Default: <nil>
*/
	OauthSecret interface{} `yaml:"oauth_secret,omitempty"`

	/*RouteTtl - Descr: TTL used for routes registered with Routing API. Default: 120s
*/
	RouteTtl interface{} `yaml:"route_ttl,omitempty"`

}